name: CI

on:
  pull_request:
  push:

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "3"
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
      fail-fast: false
    container:
      image: python:${{ matrix.python-version }}
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Setup environment
        run: |
          python3 -m pip install poetry
          make venv
          make bison

      - name: pytest
        run: make pytest

      - name: Build DB
        run: make db

      - name: Check axosyslog-cfg-helper output
        run: |
          poetry run axosyslog-cfg-helper | tee -i out.txt
          grep destination out.txt
          grep filter out.txt
          grep options out.txt
          grep parser out.txt
          grep rewrite out.txt
          grep source out.txt

  container-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and container image
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: false

  linters:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Setup environment
        run: |
          python3 -m pip install poetry
          make venv

      - name: black
        run: make black-check

      - name: pylint
        run: make pylint

      - name: pycodestyle
        run: make pycodestyle

      - name: mypy
        run: make mypy

      - name: pyright
        run: make pyright
